/*
MAVLink protocol implementation (auto-generated by mavgen.py)

Generated from: test.xml

Note: this file has been auto-generated. DO NOT EDIT
*/

using System;

    
using System.Reflection;    
    
[assembly: AssemblyTitle("Mavlink Classes")]
[assembly: AssemblyDescription("Generated Message Classes for Mavlink. See http://qgroundcontrol.org/mavlink/start")]
[assembly: AssemblyProduct("Mavlink")]
[assembly: AssemblyVersion("1.0.0.0")]
[assembly: AssemblyFileVersion("1.0.0.0")]

    namespace MavLink
{

}

    
   
namespace MavLink
{

    public abstract class MavlinkMessage
    {
        public abstract int Serialize(byte[] bytes, ref int offset);
    }

	/// <summary>
	/// Test all field types
	/// </summary>
	public class Msg_test_types : MavlinkMessage
    {

		/// <summary>
		/// char
		/// </summary>
		public byte c;

		/// <summary>
		/// string
		/// </summary>
		public byte[] s; // Array size 10

		/// <summary>
		/// uint8_t
		/// </summary>
		public byte u8;

		/// <summary>
		/// uint16_t
		/// </summary>
		public UInt16 u16;

		/// <summary>
		/// uint32_t
		/// </summary>
		public UInt32 u32;

		/// <summary>
		/// uint64_t
		/// </summary>
		public UInt64 u64;

		/// <summary>
		/// int8_t
		/// </summary>
		public sbyte s8;

		/// <summary>
		/// int16_t
		/// </summary>
		public Int16 s16;

		/// <summary>
		/// int32_t
		/// </summary>
		public Int32 s32;

		/// <summary>
		/// int64_t
		/// </summary>
		public Int64 s64;

		/// <summary>
		/// float
		/// </summary>
		public float f;

		/// <summary>
		/// double
		/// </summary>
		public double d;

		/// <summary>
		/// uint8_t_array
		/// </summary>
		public byte[] u8_array; // Array size 3

		/// <summary>
		/// uint16_t_array
		/// </summary>
		public UInt16[] u16_array; // Array size 3

		/// <summary>
		/// uint32_t_array
		/// </summary>
		public UInt32[] u32_array; // Array size 3

		/// <summary>
		/// uint64_t_array
		/// </summary>
		public UInt64[] u64_array; // Array size 3

		/// <summary>
		/// int8_t_array
		/// </summary>
		public sbyte[] s8_array; // Array size 3

		/// <summary>
		/// int16_t_array
		/// </summary>
		public Int16[] s16_array; // Array size 3

		/// <summary>
		/// int32_t_array
		/// </summary>
		public Int32[] s32_array; // Array size 3

		/// <summary>
		/// int64_t_array
		/// </summary>
		public Int64[] s64_array; // Array size 3

		/// <summary>
		/// float_array
		/// </summary>
		public float[] f_array; // Array size 3

		/// <summary>
		/// double_array
		/// </summary>
		public double[] d_array; // Array size 3

        public override int Serialize(byte[] bytes, ref int offset)
            {
                return MavLinkSerializer.Serialize_TEST_TYPES(this, bytes, ref offset);
            }        
	}

}

